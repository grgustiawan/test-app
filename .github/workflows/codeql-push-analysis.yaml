name: "CodeQL + ESLint Push Scan & Revert"

on:
  push:
    branches: [dev, main]

jobs:
  eslint:
    name: ESLint Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      eslint_failed: ${{ steps.check.outputs.failed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: check
        run: |
          echo "🔍 Running ESLint..."
          if ! npx eslint . --ext .ts,.tsx,.js,.jsx; then
            echo "failed=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "failed=false" >> $GITHUB_OUTPUT

  codeql:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    needs: eslint
    permissions:
      contents: write
      security-events: write

    outputs:
      fatal_count: ${{ steps.check_vuln.outputs.fatal_count }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Check for fatal CodeQL vulnerabilities
        id: check_vuln
        run: |
          echo "🔍 Checking for CodeQL alerts..."
          ALERTS=$(curl -s -H "Authorization: Bearer $GH_PAT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?state=open")

          FATAL_COUNT=$(echo "$ALERTS" | jq '[.[] | select(.rule.severity == "high" or .rule.severity == "critical")] | length')
          echo "fatal_count=$FATAL_COUNT" >> $GITHUB_OUTPUT
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  revert:
    name: Revert Commit on Error
    runs-on: ubuntu-latest
    needs: [eslint, codeql]
    if: needs.codeql.outputs.fatal_count != '0' || needs.eslint.outputs.eslint_failed == 'true'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Get last commit SHA
        id: last_commit
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Revert last commit
        run: |
          git revert --no-commit ${{ steps.last_commit.outputs.sha }}

          # Jika perlu mengecualikan file penting agar tidak ikut di-revert
          # Misalnya: README.md, .gitignore, atau file config tertentu
          git restore --staged README.md || true
          git restore --staged .gitignore || true

          git commit -m "Revert \"${{ github.event.head_commit.message }}\" due to workflow failure"
          git push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          
