name: "CodeQL + ESLint Push Scan & Revert"

on:
  push:
    branches: [dev, main]

jobs:
  eslint:
    name: ESLint Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: eslint
        run: |
          echo "üîç Running ESLint..."
          npx eslint . --ext .ts,.tsx,.js,.jsx
        continue-on-error: true

      - name: Save ESLint status
        run: |
          echo "ESLINT_FAILED=${{ steps.eslint.outcome != 'success' }}" >> $GITHUB_ENV

  codeql:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    needs: eslint
    permissions:
      contents: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Check for fatal CodeQL vulnerabilities
        id: check_vuln
        run: |
          echo "üîç Checking for CodeQL alerts..."
          ALERTS=$(curl -s -H "Authorization: Bearer $GH_PAT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?state=open")

          FATAL_COUNT=$(echo "$ALERTS" | jq '[.[] | select(.rule.severity == "high" or .rule.severity == "critical")] | length')
          echo "FATAL_COUNT=$FATAL_COUNT" >> $GITHUB_ENV

          if [ "$FATAL_COUNT" -gt 0 ]; then
            echo "‚ùå Found $FATAL_COUNT high/critical vulnerabilities."
          else
            echo "‚úÖ No fatal vulnerabilities found."
          fi
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  revert:
    name: Revert Commit on Error
    runs-on: ubuntu-latest
    needs: [eslint, codeql]
    if: ${{ env.FATAL_COUNT != '0' || env.ESLINT_FAILED == 'true' }}
    permissions:
      contents: write

    steps:
      - name: Checkout repo with write access
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Revert latest commit
        run: |
          echo "‚ö† Reverting latest commit due to ESLint or CodeQL failure..."
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git revert --no-edit HEAD
          git push origin HEAD:${{ github.ref_name }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
